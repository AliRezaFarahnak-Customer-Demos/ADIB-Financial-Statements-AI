# ----------------------------------------------------------------------------------------------------
# Template to deploy a pre-built Azure Website artifact to one environment
# ----------------------------------------------------------------------------------------------------
parameters: 
- name: variableGroupName
  default:  'myVariableGroup'
- name: environmentName
  default:  'DEV'
- name: zipFileName
  default: 'App.zip'

# ------------------------------------------------------------------------------------------------------------------------
jobs:
- deployment: Deploy${{ parameters.environmentName }}Website
  displayName: Initialize ${{ parameters.environmentName }} Deploy Website
  environment: ${{ parameters.environmentName }}

- job: DeployApplication${{ parameters.environmentName }}Website
  displayName: Deploy ${{ parameters.environmentName }} Website
  variables:
    - group: ${{ parameters.variableGroupName }}
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}
    - name: zipFileName
      value: '${{ parameters.zipFileName }}'
      
    # - name: deployViaAzureRmWebDeployment4a
    #   value: $[eq(variables['webDeployTaskName'], 'AzureRmWebAppDeployment4')]
    # - name: deployViaAzureRmWebDeployment4b
    #   value: $[eq(variables.webDeployTaskName, 'AzureRmWebAppDeployment4')]
    # - name: deployViaAzureRmWebDeployment4c
    #   value: ${{ variables.webDeployTaskName }}
    # - name: deployViaAzureRmWebDeployment4d
    #   value: ${{ eq(lower(variables.webDeployTaskName), 'azurermwebappdeployment4') }}
    # - name: deployViaAzureRmWebDeployment4e
    #   value: ${{ or(eq(lower(variables.webDeployTaskName), 'azurermwebappdeployment4'), eq(variables.webDeployTaskName, '')) }}

    # - name: deployViaAzureRmWebDeployment3a
    #   value: $[eq(variables['webDeployTaskName'], 'AzureRmWebAppDeployment3')]
    # - name: deployViaAzureRmWebDeployment3b
    #   value: $[eq(variables.webDeployTaskName, 'AzureRmWebAppDeployment3')]
    # - name: deployViaAzureRmWebDeployment3c
    #   value: ${{ variables.webDeployTaskName }}
    # - name: deployViaAzureRmWebDeployment3d
    #   value: ${{ eq(lower(variables.webDeployTaskName), 'azurermwebappdeployment3') }}
    # - name: deployViaAzureRmWebDeployment3e
    #   value: ${{ or(eq(lower(variables.webDeployTaskName), 'azurermwebappdeployment3'), eq(variables.webDeployTaskName, '')) }}

    # - name: deployViaAzureRmWebDeployment4
    #   value: '${{ variables.webDeployTaskName == 'AzureRmWebAppDeployment4' }}'
    # - name: deployViaAzureRmWebDeployment3
    #   value: '${{ variables.webDeployTaskName == 'AzureRmWebAppDeployment3' }}'
    # - name: deployViaAzureWebApp
    #   value: '${{ variables.webDeployTaskName == 'AzureWebApp' }}'
    # - name: deployViaCLI
    #   value: '${{ variables.webDeployTaskName == 'CLI' }}'
    # - name: deployTaskName
    #   value: '${{ variables.webDeployTaskName }}'
    # - name: deployViaAzureRmWebDeployment4
    #   value: $(deployTaskName == 'AzureRmWebAppDeployment4')
    # - name: deployViaAzureRmWebDeployment3
    #   value: $(deployTaskName == 'AzureRmWebAppDeployment3')
    # - name: deployViaAzureWebApp
    #   value: $(deployTaskName == 'AzureWebApp')
    # - name: deployViaCLI
    #   value: $(deployTaskName == 'CLI')

  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Artifacts'
    inputs:
      artifact: drop

  - bash: |
      backendServiceNameEnv=$(echo "$(backendServiceNamePrefix)-$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
      echo "backendServiceNameEnv=$backendServiceNameEnv"
      echo "##vso[task.setvariable variable=backendServiceNameEnv]$backendServiceNameEnv"
    displayName: 'Create Variables'

  - task: CmdLine@2
    inputs:
      script: |
        echo "variableGroupName=${{ parameters.variableGroupName }}"
        echo "subscriptionId=$(subscriptionId)"
        echo "subscriptionName=$(subscriptionName)"
        echo "serviceConnectionName=$(serviceConnectionName)"
        echo "resourceGroupName=$(resourceGroupName)"
        echo "environmentNameLower=$(environmentNameLower)"
        echo "backendServiceNamePrefix=$(backendServiceNamePrefix)"
        echo "backendServiceNameEnv=$(backendServiceNameEnv)"
        echo "webDeployTaskName=$(webDeployTaskName)"
        echo "zipFileName=$(zipFileName)"
        echo "Set Subscription Command:"
        echo "  az account set --subscription $(subscriptionId)"
        echo "Deploy Command:"
        echo "  az webapp deployment source config-zip -g $(resourceGroupName) -n $(backendServiceNameEnv) --src $(Pipeline.Workspace)/$(zipFileName)"
        echo "Pipeline workspace: $(Pipeline.Workspace)"
        echo "DefaultWorkingDirectory: $(System.DefaultWorkingDirectory)"
        echo "Directory of pipeline workspace:"
        tree $(Pipeline.Workspace)
    displayName: 'Display Variables and Tree'
    continueOnError: true

  # ------------------------------------------------------------------------------------------
  # -- AzureRmWebAppDeployment works most of the time, but frequently gets the error 
  # -- "This resource does not exist" even though the app really does exist 
  # -- maybe looking in the wrong subscription in multi-subscription scenario...?
  # Note: The deploy task checks the existence of the resource before deploying and fails.
  #       Deploying via the CLI command doesn't have that step...
  # ------------------------------------------------------------------------------------------

  - task: AzureRmWebAppDeployment@4
    displayName: 'Publish App to Azure'
    inputs:
      ConnectionType: AzureRM
      azureSubscription: $(serviceConnectionName)
      appType: webAppLinux
      WebAppName: $(backendServiceNameEnv)
      packageForLinux: $(Pipeline.Workspace)/$(zipFileName)
      deploymentMethod: zipDeployment

  # - ${{ if or(eq(lower(variables.webDeployTaskName), 'azurermwebappdeployment4'), eq(variables.webDeployTaskName, '')) }}:
  #   - task: AzureRmWebAppDeployment@4
  #     displayName: 'RMWebApp4 Publish Web'
  #     retryCountOnTaskFailure: 3
  #     inputs:
  #       ConnectionType: AzureRM
  #       azureSubscription: $(serviceConnectionName)
  #       appType: webAppLinux
  #       WebAppName: $(backendServiceNameEnv)
  #       package: $(Pipeline.Workspace)/$(zipFileName)
  #       enableCustomDeployment: true
  #       deploymentMethod: zipDeployment


  # - ${{ if eq(lower(variables.webDeployTaskName), 'azurermwebappdeployment3') }}:
  #   - task: AzureRmWebAppDeployment@3
  #     displayName: 'RMWebApp3 Publish Web'
  #     retryCountOnTaskFailure: 3
  #     inputs:
  #       ConnectionType: AzureRM
  #       azureSubscription: $(serviceConnectionName)
  #       appType: webAppLinux
  #       WebAppName: $(backendServiceNameEnv)
  #       packageForLinux: $(Pipeline.Workspace)/$(zipFileName)
  #       deploymentMethod: zipDeployment

  # ------------------------------------------------------------------------------------------
  # -- This says it deploys successfully but the website doesn't work...
  # https://learn.microsoft.com/en-us/azure/app-service/deploy-run-package
  # ------------------------------------------------------------------------------------------
  # - ${{ if eq(variables.webDeployTaskName, 'CLI') }}:
  #   - task: AzureCLI@2
  #     displayName: 'Az Deploy WebApp via CLI'
  #     retryCountOnTaskFailure: 3
  #     inputs:
  #       azureSubscription: $(serviceConnectionName)
  #       resourceGroupName: $(resourceGroupName)
  #       scriptType: bash
  #       scriptLocation: inlineScript
  #       addSpnToEnvironment: true
  #       inlineScript: |
  #         az login --service-principal -u $(adClientId) -p $(adClientSecret) --tenant $(adTenantId)
  #         az account set --subscription $(subscriptionId)
  #         az webapp config appsettings set --resource-group $(resourceGroupName) --name $(backendServiceNameEnv) --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true
  #         az webapp config appsettings set --resource-group $(resourceGroupName) --name $(backendServiceNameEnv) --settings WEBSITE_RUN_FROM_PACKAGE="1"
  #         az webapp deployment source config-zip --resource-group $(resourceGroupName) --name $(backendServiceNameEnv) --src $(Pipeline.Workspace)/$(zipFileName)

  # ------------------------------------------------------------------------------------------
  # - ${{ if eq(variables.webDeployTaskName, 'AzureWebApp') }}:
  #   - task: AzureWebApp@1
  #     displayName: 'Publish WebApp to Azure'
  #     inputs:
  #       azureSubscription: $(serviceConnectionName)
  #       resourceGroupName: $(resourceGroupName)
  #       appName: $(backendServiceNameEnv)
  #       package: $(Pipeline.Workspace)/$(zipFileName)
  #       deploymentMethod: zipDeployment

  # ------------------------------------------------------------------------------------------
  # - Doing this login step before the AzureRmWebAppDeployment@4 did not resolve the issue...
  # ------------------------------------------------------------------------------------------
  # - task: CmdLine@2
  #   inputs:
  #     script: |
  #       az login --service-principal -u $(adClientId) -p $(adClientSecret) --tenant $(adTenantId)
  #       az account set --subscription $(subscriptionId)
     
  # ------------------------------------------------------------------------------------------
  # Other deploy command formats I've tried...
  # ------------------------------------------------------------------------------------------
  # - task: AzureWebApp@1
  #   displayName: 'Publish App to Azure'
  #   inputs:
  #     azureSubscription: $(subscriptionName)
  #     resourceGroupName: $(resourceGroupName)
  #     appName: $(backendServiceNameEnv)
  #     package: $(Pipeline.Workspace)/$(zipFileName)
  #     deploymentMethod: zipDeployment

  # - task: AzureRmWebAppDeployment@4
  #   displayName: 'Publish App to Azure'
  #   inputs:
  #     ConnectionType: AzureRM
  #     azureSubscription: $(serviceConnectionName)
  #     appType: webAppLinux
  #     WebAppName: $(backendServiceNameEnv)
  #     packageForLinux: $(Pipeline.Workspace)/$(zipFileName)
  #     deploymentMethod: zipDeployment

  # - task: AzureWebApp@1
  #   displayName: 'Publish App to Azure'
  #   inputs:
  #     azureSubscription: $(serviceConnectionName)
  #     appName: $(backendServiceNameEnv)
  #     package: $(Pipeline.Workspace)/publish
  #     deploymentMethod: auto

  # ----------------------------------------------------------------------------------------------------
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-web-app-v1?view=azure-pipelines&viewFallbackFrom=azure-devops#deployment-methods  # --> deploys output.tar.gz
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-rm-web-app-deployment-v4?view=azure-pipelines
  # ----------------------------------------------------------------------------------------------------
