<Project Sdk="Microsoft.NET.Sdk.Web">
  <Import Project="..\..\..\Dependencies.props" />
  <PropertyGroup>
    <RootNamespace>MentalHealthAssistant.Frontend</RootNamespace>
    <AssemblyName>MentalHealthAssistant.Frontend</AssemblyName>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <spaFalconRoot>src\</spaFalconRoot>
    <YarnWorkingDir>$(spaFalconRoot)</YarnWorkingDir>
    <YarnBuildCommand>build</YarnBuildCommand>
    <YarnBuildCommand Condition="'$(Configuration)' == 'Release'">build --env.prod</YarnBuildCommand>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <DefaultItemExcludes>$(DefaultItemExcludes)</DefaultItemExcludes>
    <NoWarn>CA1016;SA1652;CA1822;CA1303;NU1701;CA1812;CA2201;CS1573</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Applications.Events.Server.Core2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" />
    <PackageReference Include="Yarn.MSBuild" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(SuppressionsPath)GlobalSuppressions.cs" Link="GlobalSuppressions.cs" />
  </ItemGroup>
 
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(spaFalconRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(spaFalconRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  
  <Target Name="YarnInstall" BeforeTargets="YarnBuild">
    <Yarn Command="install" Condition=" ! Exists('node_modules/')" WorkingDirectory="$(spaFalconRoot)" />
  </Target>
  
  <Target Name="LocalConfig" BeforeTargets="YarnInstall">
    <Exec WorkingDirectory="$(spaFalconRoot)" Command="node ./tools/cli/create-local-env.js prod publish" />
    <!-- Workaround to support re-build after set the file during publishing, since BeforeTargets doesn't effect -->
    <Yarn Command="$(YarnBuildCommand)" WorkingDirectory="$(YarnWorkingDir)" ExecutablePath="$(YarnExecutablePath)" NodeJsExecutablePath="$(NodeJsExecutablePath)" Condition="'$(SourceTask)' == 'Publish'" />
  </Target>
</Project>
